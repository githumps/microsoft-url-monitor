name: Monitor Intune Endpoint Lists

# Triggers: manual (workflow_dispatch) and every day at 07:00 AM US‑Eastern (11:00 UTC)
on:
  workflow_dispatch:
  schedule:
    - cron: '0 11 * * *'

permissions:
  contents: write  # allow the workflow bot to push changed files

jobs:
  check-endpoints:
    runs-on: ubuntu-latest
    env:
      # ➡️  REQUIRED – Add these in **Settings → Secrets and variables → Actions**
      SLACK_WEBHOOK_URL:   ${{ secrets.SLACK_WEBHOOK_URL }}   # Slack Incoming Webhook (required)
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }} # Discord Incoming Webhook (optional)
      DATADOG_API_KEY:     ${{ secrets.DATADOG_API_KEY }}     # Datadog (optional)

    steps:
      - uses: actions/checkout@v4

      - name: Install jq (JSON helper)
        run: sudo apt-get update && sudo apt-get install -y jq

      # ------------------------------------------------------------
      # 1) Generate the latest Intune endpoint list (ips + urls)
      # ------------------------------------------------------------
      - name: Fetch Intune endpoints (PowerShell)
        shell: pwsh
        run: |
          $json = Invoke-RestMethod -Uri ("https://endpoints.office.com/endpoints/WorldWide?ServiceAreas=MEM&clientrequestid=$([guid]::NewGuid())")
          $ips  = $json | Where-Object { $_.ServiceArea -eq 'MEM' -and $_.ips  } | Select-Object -ExpandProperty ips  -Unique
          $urls = $json | Where-Object { $_.ServiceArea -eq 'MEM' -and $_.urls } | Select-Object -ExpandProperty urls -Unique

          $payload = [pscustomobject]@{
            timestamp = (Get-Date).ToString('o')
            ip_count  = $ips.Count
            url_count = $urls.Count
            ips       = $ips  | Sort-Object
            urls      = $urls | Sort-Object
          }

          $payload | ConvertTo-Json -Depth 5 | Set-Content endpoints.json -Encoding utf8

      # ------------------------------------------------------------
      # 2) Did the list change compared to HEAD?
      # ------------------------------------------------------------
      - name: Detect changes
        id: changes
        run: |
          git fetch origin ${{ github.ref_name }} --depth=1 || true
          if git diff --quiet -- endpoints.json; then
            echo "changed=no" >> "$GITHUB_OUTPUT"
          else
            echo "changed=yes" >> "$GITHUB_OUTPUT"
          fi

      # ------------------------------------------------------------
      # 3) Commit + push new list for traceability
      # ------------------------------------------------------------
      - name: Commit & push
        if: steps.changes.outputs.changed == 'yes'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add endpoints.json
          git commit -m "chore(intune): update endpoints $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push

      # ------------------------------------------------------------
      # 4) Capture a one‑line diff of the change **after** commit
      # ------------------------------------------------------------
      - name: Get diff text
        if: steps.changes.outputs.changed == 'yes'
        id: diff
        run: |
          DIFF=$(git show --pretty=medium --unified=5 --no-color HEAD | sed -e 's/`/`/g')
          echo "DIFF<<EOF" >> $GITHUB_ENV
          echo "$DIFF" >> $GITHUB_ENV
          echo "EOF"  >> $GITHUB_ENV

      # ------------------------------------------------------------
      # 5) Notify Slack, Discord, and (optionally) Datadog
      # ------------------------------------------------------------
      - name: Send notifications
        if: steps.changes.outputs.changed == 'yes'
        env:
          REPO:              ${{ github.repository }}
          SERVER_URL:        ${{ github.server_url }}
          COMMIT_SHA:        ${{ github.sha }}
        run: |
          COMMIT_URL="${SERVER_URL}/${REPO}/commit/${COMMIT_SHA}"

          # ===============  Slack  ===============
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            jq -n --arg text "ℹ️ *Intune Endpoint Update* (<${COMMIT_URL}|commit>)\n```diff\n${DIFF}\n```" '{text:$text}' |
              curl -sS -X POST -H 'Content-Type: application/json' --data @- "$SLACK_WEBHOOK_URL"
          fi

          # ===============  Discord  ===============
          if [ -n "$DISCORD_WEBHOOK_URL" ]; then
            jq -n --arg content "**Intune Endpoint Update**\n${COMMIT_URL}\n```diff\n${DIFF}\n```" '{content:$content}' |
              curl -sS -X POST -H 'Content-Type: application/json' --data @- "$DISCORD_WEBHOOK_URL"
          fi

          # ===============  Datadog  ===============
          if [ -n "$DATADOG_API_KEY" ]; then
            curl -sS -X POST "https://api.datadoghq.com/api/v1/events" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: $DATADOG_API_KEY" \
              -d "{\"title\":\"Intune endpoints changed\",\"text\":\"See commit: ${COMMIT_URL}\",\"alert_type\":\"info\",\"tags\":[\"intune\",\"endpoints\"]}"
          fi

      # ------------------------------------------------------------
      # END
      # ------------------------------------------------------------
