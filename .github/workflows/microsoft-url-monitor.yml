name: Monitor Intune Endpoint Lists

on:
  workflow_dispatch:
  schedule:
    # Daily at 07:00 AM US‑Eastern (11:00 UTC)
    - cron: '0 11 * * *'

permissions:
  contents: write

jobs:
  check-endpoints:
    runs-on: self-hosted
    env:
      SLACK_WEBHOOK_URL:   ${{ secrets.SLACK_WEBHOOK_URL }}   # Slack Incoming Webhook (required)
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }} # Discord Incoming Webhook (optional)
      DATADOG_API_KEY:     ${{ secrets.DATADOG_API_KEY }}     # Datadog (optional)

    steps:
      - uses: actions/checkout@v4

      #--------------------------------------------------------------
      # 1) Install prerequisites (jq + PowerShell)
      #--------------------------------------------------------------
      - name: Install jq & PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y jq powershell

      #--------------------------------------------------------------
      # 2) Generate latest endpoint list (ips + urls)
      #--------------------------------------------------------------
      - name: Fetch Intune endpoints
        id: generate
        shell: pwsh
        run: |
          $json = Invoke-RestMethod -Uri ("https://endpoints.office.com/endpoints/WorldWide?ServiceAreas=MEM&clientrequestid=$([guid]::NewGuid())")
          $ips  = $json | Where-Object { $_.ServiceArea -eq 'MEM' -and $_.ips  } | Select-Object -ExpandProperty ips  -Unique
          $urls = $json | Where-Object { $_.ServiceArea -eq 'MEM' -and $_.urls } | Select-Object -ExpandProperty urls -Unique

          $payload = [pscustomobject]@{
            timestamp = (Get-Date).ToString('o')
            ip_count  = $ips.Count
            url_count = $urls.Count
            ips       = $ips  | Sort-Object
            urls      = $urls | Sort-Object
          }

          $payload | ConvertTo-Json -Depth 5 | Set-Content endpoints.json -Encoding utf8

      #--------------------------------------------------------------
      # 3) Detect changes versus HEAD
      #--------------------------------------------------------------
      - name: Detect changes
        id: changes
        run: |
          git fetch --depth=1 || true
          if git diff --quiet -- endpoints.json; then
            echo "changed=no" >> $GITHUB_OUTPUT
          else
            echo "changed=yes" >> $GITHUB_OUTPUT
          fi

      #--------------------------------------------------------------
      # 4) Commit & push new list for traceability
      #--------------------------------------------------------------
      - name: Commit updated list
        if: steps.changes.outputs.changed == 'yes'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add endpoints.json
          git commit -m "chore(intune): update endpoints $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push

      #--------------------------------------------------------------
      # 5) Capture a diff snippet (5‑line context)
      #--------------------------------------------------------------
      - name: Capture diff
        if: steps.changes.outputs.changed == 'yes'
        id: diff
        run: |
          echo 'DIFF<<EOF' >> $GITHUB_ENV
          git show --pretty=medium --unified=5 --no-color HEAD >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      #--------------------------------------------------------------
      # 6) Send notifications (Slack, Discord, Datadog)
      #--------------------------------------------------------------
      - name: Send notifications
        if: steps.changes.outputs.changed == 'yes'
        env:
          DIFF: ${{ env.DIFF }}
          COMMIT_URL: "${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
        run: |
          post_to_slack() {
            jq -n --arg text "ℹ️ *Intune Endpoint Update* (<${COMMIT_URL}|commit>)\n\`\`\`diff\n${DIFF}\n\`\`\`" '{text:$text}' |
              curl -sS -X POST -H 'Content-Type: application/json' --data @- "$SLACK_WEBHOOK_URL"
          }
          post_to_discord() {
            jq -n --arg content "**Intune Endpoint Update**\n${COMMIT_URL}\n\`\`\`diff\n${DIFF}\n\`\`\`" '{content:$content}' |
              curl -sS -X POST -H 'Content-Type: application/json' --data @- "$DISCORD_WEBHOOK_URL"
          }
          post_to_datadog() {
            curl -sS -X POST "https://api.datadoghq.com/api/v1/events" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: $DATADOG_API_KEY" \
              -d "{\"title\":\"Intune endpoints changed\",\"text\":\"See commit: ${COMMIT_URL}\",\"alert_type\":\"info\",\"tags\":[\"intune\",\"endpoints\"]}"
          }

          [ -n "$SLACK_WEBHOOK_URL" ]   && post_to_slack
          [ -n "$DISCORD_WEBHOOK_URL" ] && post_to_discord
          [ -n "$DATADOG_API_KEY" ]     && post_to_datadog